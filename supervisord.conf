[unix_http_server]
file=/tmp/supervisor.sock                       ; path to your socket file

[supervisord]
logfile=/var/log/supervisor/supervisord.log     ; supervisord log file
logfile_maxbytes=50MB                           ; maximum size of logfile before rotation
logfile_backups=10                              ; number of backed up logfiles
loglevel=error                                  ; info, debug, warn, trace
pidfile=/var/run/supervisord.pid                ; pidfile location
nodaemon=true                                   ; run supervisord as a daemon
minfds=1024                                     ; number of startup file descriptors
minprocs=200                                    ; number of process descriptors
childlogdir=/var/log/supervisor/                ; where child log files will live

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock         ; use a unix:// URL  for a unix socket

; Program "before" will run once, doing any init tasks and then finish with
; a call to `supervisorctl start after:*`. This will start any other tasks
; that need to wait until the environment is ready.

[group:after]
programs=uwsgi

[program:before]
command=./runserver.sh
directory=/auth-proxy
autorestart=false

[program:uwsgi]
command=/usr/bin/env uwsgi /auth-proxy/uwsgi.ini
directory=/auth-proxy
autostart=false
autorestart=true
stopsignal=INT
exitcodes=0
